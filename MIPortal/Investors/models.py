from django.db import models
from datetime import date
from datetime import datetime
from django.contrib.auth import get_user_model
import uuid
import os
CustomUser = get_user_model()
# from django.contrib.auth.models import AbstractBaseUser, BaseUserManager
def path_and_rename(instance, filename):
    upload_to = 'company_logo'
    ext = filename.split('.')[-1]
    # get filename
    filename = '{}.{}'.format(instance.entity_id, ext)
    # return the whole path to the file
    return os.path.join(upload_to, filename)
# Create your models here.


# class User(AbstractBaseUser):
#     id = models.UUIDField(primary_key=True, unique=True)
#     status = models.BooleanField(default=True, blank=True)
#     remarks = models.CharField(max_length=50, null=True, blank=True)
#     created_by = models.CharField(max_length=50, null=True, blank=True)
#     created_on = models.DateField(default=datetime.today, blank=True)
#     modified_by = models.CharField(max_length=50, null=True, blank=True)
#     modified_on = models.DateField(default=datetime.today, blank=True)
#     salutation = models.CharField(max_length=50, null=True, blank=True)
#     firstname = models.CharField(max_length=50, null=True, blank=True)
#     lastname = models.CharField(max_length=50, null=True, blank=True)
#     email = models.EmailField(max_length=50, null=True, blank=True)
#     mobile_no = models.CharField(max_length=20, null=True, blank=True)
#     organization = models.CharField(max_length=50, null=True, blank=True)
#     Tenure = models.CharField(max_length=50, null=True, blank=True)
#     PAN = models.CharField(max_length=50, null=True, blank=True)
#     State = models.CharField(max_length=20, null=True, blank=True)
#     city = models.CharField(max_length=20, null=True, blank=True)
#     referral_code = models.CharField(max_length=20, null=True, blank=True)
#     password = models.(max_length=20, null=True, blank=True)


class Investor(models.Model):
    investor_id = models.CharField(max_length=50, primary_key=True, blank=True, default=uuid.uuid4)
    user_id = models.ForeignKey(CustomUser, on_delete=models.CASCADE, null=True)
    investor_name = models.CharField(max_length=50, null=True, blank=True)
    investor_category = models.CharField(max_length=20, null=True, blank=True)
    investor_email = models.EmailField(max_length=40, null=True, blank=True)
    contact_no = models.CharField(max_length=15, null=True, blank=True)
    investor_PAN = models.CharField(max_length=15, null=True, blank=True)
    # investor_Adhaar = models.CharField(max_length=16, null=True, blank=True)
    investor_Aadhaar = models.CharField(max_length=16, blank=True, null=True)
    investor_PAN_proof = models.CharField(max_length=50, null=True, blank=True)
    investor_Aadhaar_proof = models.FileField(upload_to='investor_aadhaar_proof', null=True, blank=True)
    investor_NRI_proof = models.FileField(upload_to='investor_NRI_proof', null=True, blank=True)
    investor_gs_number = models.CharField(max_length=15, null=True, blank=True)
    investor_gst_detail = models.CharField(max_length=25, null=True, blank=True)
    investor_gst_proof = models.FileField(upload_to='investor_gst_proof', null=True, blank=True)
    investor_date_of_incorporation = models.DateField(null=True, blank=True)
    investor_date_of_incorporation = models.DateField(null=True, blank=True)
    investor_authorised_user_name = models.CharField(max_length=25, null=True, blank=True)
    investor_authorised_user_mobile = models.CharField(max_length=15, null=True, blank=True)
    investor_authorised_user_DOB = models.DateField(null=True, blank=True)
    investor_authorised_user_email = models.EmailField(max_length=30, null=True, blank=True)
    investor_authorised_user_address = models.CharField(max_length=50, null=True, blank=True)
    investor_authorised_user_PAN = models.CharField(max_length=15, null=True, blank=True)
    investor_authorised_user_Aadhaar = models.CharField(max_length=16, null=True, blank=True)
    investor_authorised_user_PAN_proof = models.FileField(upload_to='investor_authorised_user_PAN_proof', null=True, blank=True)
    investor_authorised_user_Aadhaar_proof = models.FileField(upload_to='investor_authorised_user_Aadhaar_proof', null=True, blank=True)
    investor_CIN_LLP_cert_no = models.CharField(max_length=20, null=True, blank=True)
    investor_CIN_LLP_cert_proof = models.CharField(max_length=20, null=True, blank=True)
    investor_deed_MOA_and_AOA = models.CharField(max_length=50, null=True, blank=True)
    investor_resolution = models.CharField(max_length=50, null=True, blank=True)
    partner_referal_code = models.CharField(max_length=15, null=True, blank=True)
    investor_bank_account_no = models.CharField(max_length=20, null=True, blank=True)
    investor_bank_account_cancelled_cheque = models.CharField(max_length=15, null=True, blank=True)
    investor_bank_account_IFSC_code = models.CharField(max_length=15, null=True, blank=True)
    investor_bank_name = models.CharField(max_length=30, null=True, blank=True)
    investor_mcred_wallet_account_no = models.CharField(max_length=20, null=True, blank=True)
    investor_mcred_wallet_bank_name = models.CharField(max_length=25, null=True, blank=True)
    special_status_to_investor = models.CharField(max_length=30, null=True, blank=True)
    special_applicable_yield = models.FloatField(null=True, blank=True)
    minimum_investment_limit = models.FloatField(null=True, blank=True)
    expected_yield = models.FloatField(null=True, blank=True)
    escrow_balance = models.FloatField(null=True, blank=True)
    created_date = models.DateTimeField(auto_now_add=True, null=True, blank=True)
    status = models.CharField(max_length=50, null=True, blank=True)
    pending_reason = models.CharField(max_length=50, null=True, blank=True)
    investor_login_status = models.CharField(max_length=50, null=True, blank=True)


class Business(models.Model):
    business_id = models.CharField(max_length=50, primary_key=True, default=uuid.uuid4)
    user_id = models.ForeignKey(CustomUser, blank=True, null=True, on_delete=models.CASCADE)
    business_name = models.CharField(max_length=100, null=True, blank=True)
    CIN_LLP_no = models.CharField(max_length=20, null=True, blank=True)
    type_of_business = models.CharField(max_length=20, null=True, blank=True)
    sector = models.CharField(max_length=20, null=True, blank=True)
    bank_account_detail = models.CharField(max_length=20, null=True, blank=True)
    business_face_value_discount_rate = models.FloatField(max_length=10, null=True, blank=True)
    gst_detail = models.CharField(max_length=20, null=True, blank=True)
    AS_26_detail = models.CharField(max_length=20, null=True, blank=True)
    business_pan_card = models.CharField(max_length=16, null=True, blank=True)
    business_udyog_adhaar = models.CharField(max_length=16, null=True, blank=True)
    business_credit_rating = models.CharField(max_length=10, null=True, blank=True)
    business_financial_statement = models.CharField(max_length=20, null=True, blank=True)
    business_shareholding = models.CharField(max_length=20, null=True, blank=True)
    business_list_of_directors = models.CharField(max_length=20, null=True, blank=True)
    business_credit_report = models.CharField(max_length=20, null=True, blank=True)
    business_debt_profile = models.CharField(max_length=20, null=True, blank=True)
    business_customers = models.CharField(max_length=100, null=True, blank=True)
    business_suppliers = models.CharField(max_length=100, null=True, blank=True)
    business_AOA_MOA = models.CharField(max_length=20, null=True, blank=True)
    business_address_proof = models.CharField(max_length=100, null=True, blank=True)
    business_board_resolution = models.CharField(max_length=20, null=True, blank=True)
    business_COI_Deed = models.CharField(max_length=100, null=True, blank=True)
    business_Gumasta = models.CharField(max_length=100, null=True, blank=True)
    business_description = models.CharField(max_length=100, null=True, blank=True)
    business_contact_no = models.CharField(max_length=15, null=True, blank=True)
    business_address = models.CharField(max_length=100, null=True, blank=True)
    business_email_id = models.CharField(max_length=25, null=True, blank=True)
    business_user_mobile_number = models.CharField(max_length=15, null=True, blank=True)
    business_user_email_id = models.CharField(max_length=25, null=True, blank=True)
    business_user_name = models.CharField(max_length=20, null=True, blank=True)
    business_user_pan_card = models.CharField(max_length=25, null=True, blank=True)
    business_user_adhaar_card = models.CharField(max_length=25, null=True, blank=True)
    business_user_dob = models.DateField(null=True, blank=True)
    partner_referal_code = models.CharField(max_length=20, null=True, blank=True)
    business_bank_account_no = models.CharField(max_length=20, null=True, blank=True)
    business_bank_account_cancelled_cheque = models.CharField(max_length=20, null=True, blank=True)
    business_bank_account_IFSC_code = models.CharField(max_length=10, null=True, blank=True)
    business_bank_name = models.CharField(max_length=20, null=True, blank=True)
    business_mcred_wallet_acc_no = models.CharField(max_length=20, null=True, blank=True)
    business_mcred_wallet_bank_name = models.CharField(max_length=20, null=True, blank=True)
    assigned_sales_person = models.CharField(max_length=30, null=True, blank=True)
    facility_approved_amount = models.FloatField(null=True, blank=True)
    entity_mapped = models.CharField(max_length=100, null=True, blank=True)
    facility_validity = models.CharField(max_length=100, null=True, blank=True)
    penal_interest_charges = models.BooleanField(null=True, blank=True)
    margin_period = models.CharField(max_length=100, null=True, blank=True)
    status_of_compliance = models.CharField(max_length=100, null=True, blank=True)
    status_of_due_clearance = models.CharField(max_length=100, null=True, blank=True)
    bank_statement_analysis_report = models.TextField(max_length=500, null=True, blank=True)
    gst_statement_analysis_report = models.TextField(max_length=500, null=True, blank=True)
    facility_assessment_report = models.TextField(max_length=500, null=True, blank=True)
    credit_analysis_report = models.TextField(max_length=500, null=True, blank=True)
    available_facility_limit = models.FloatField(null=True, blank=True)
    financials = models.CharField(max_length=100, null=True, blank=True)
    since_active = models.CharField(max_length=10, null=True, blank=True)
    total_invoices = models.IntegerField(null=True, blank=True)
    amount = models.FloatField(null=True, blank=True)
    delay = models.CharField(max_length=50, null=True, blank=True)
    verified_items = models.CharField(max_length=100, null=True, blank=True)
    city = models.CharField(max_length=20, null=True, blank=True)
    mcred_opinion = models.TextField(null=True, blank=True)
    company_overview = models.TextField(null=True, blank=True)
    history_with_mcred = models.TextField(null=True, blank=True)
    turnover = models.CharField(max_length=50, null=True, blank=True)
    state = models.CharField(max_length=50, null=True, blank=True)
    status = models.CharField(max_length=50, blank=True, null=True)
    escrow_balance = models.FloatField(null=True, blank=True)
    created_date = models.DateTimeField(auto_now_add=True, null=True, blank=True)
    year_of_incorporation = models.IntegerField(null=True,blank=True)
    plant_location = models.CharField(max_length=50,null=True, blank=True)
    state = models.CharField(max_length=50, blank=True, null=True)
    escrow_balance = models.FloatField(null=True, blank=True)

class Invoice(models.Model):
    id = models.IntegerField(blank=True, null=True)
    invoice_id = models.CharField(max_length=50, primary_key=True, default=uuid.uuid4)
    invoice_number = models.CharField(max_length=20, null=True, blank=True)
    business_name = models.CharField(max_length=50, null=True, blank=True)
    business_id = models.ForeignKey(Business, on_delete=models.CASCADE, null=True, blank=True)
    invoice_date = models.DateField(null=True, blank=True)
    invoice_upload_date = models.DateField(null=True, blank=True, default=date.today())
    entity_name = models.CharField(max_length=50, null=True, blank=True)
    batch_invoice_amount = models.FloatField(null=True, blank=True)
    invoice_amount = models.FloatField(null=True, blank=True)
    batch_number_of_invoices = models.IntegerField(default=0, blank=True, null=True)
    batch_no = models.CharField(max_length=20, blank=True, null=True)
    applicable_ROI = models.FloatField(null=True, blank=True)
    applicable_discount_rate = models.FloatField(null=True, blank=True)
    invoice_fundable_amount = models.FloatField(null=True, blank=True)
    invoice_investment_amount = models.FloatField(null=True, blank=True, default=0)
    invoice_total_investment = models.FloatField(null=True, blank=True, default=0)
    invoice_due_date = models.DateField(null=True, blank=True)
    EWB_id = models.CharField(max_length=20, null=True, blank=True)
    product_description = models.CharField(max_length=50, null=True, blank=True)
    product_HSN_code = models.CharField(max_length=10, null=True, blank=True)
    credit_period_as_per_agreement = models.IntegerField(null=True, blank=True)
    business_over_due_pending = models.FloatField(null=True, blank=True)
    tds_applicable_on_invoice = models.FloatField(null=True, blank=True)
    assignment_of_invoice = models.CharField(max_length=100, null=True, blank=True)
    invoice_assigned_to = models.CharField(max_length=100, null=True, blank=True)
    PO_number = models.CharField(max_length=50, null=True, blank=True)
    validity_of_PO = models.DateField(null=True, blank=True)
    gst_amount = models.FloatField(null=True, blank=True)
    igst = models.FloatField(null=True, blank=True)
    cgst = models.FloatField(null=True, blank=True)
    sgst = models.FloatField(null=True, blank=True)
    bank_detail_in_invoice = models.CharField(max_length=25, null=True, blank=True)
    available_limit_to_business = models.FloatField(null=True, blank=True)
    validity_of_invoice = models.DateField(null=True, blank=True)
    final_approval_status_verification = models.CharField(max_length=30, null=True, blank=True)
    applicable_gst_rate = models.FloatField(null=True, blank=True)
    invoice_live_date = models.DateField(null=True, blank=True)
    invoice_approval_date = models.DateField(null=True, blank=True)
    goods_delivery_date = models.DateField(null=True, blank=True)
    invoice_subscription_status = models.FloatField(max_length=5, null=True, blank=True, default=0)
    invoice_available_investment = models.FloatField(null=True, blank=True)
    margin_days = models.IntegerField(null=True, blank=True)
    goods_delivery_sts = models.CharField(max_length=50, null=True, blank=True)
    transporter_name = models.CharField(max_length=20, null=True, blank=True)
    transporter_vehicle_no = models.CharField(max_length=20, null=True, blank=True)
    goods_origin_state = models.CharField(max_length=20, null=True, blank=True)
    goods_delivery_state = models.CharField(max_length=20, null=True, blank=True)
    invoice_pdf_link = models.CharField(max_length=100, null=True, blank=True)
    invoice_pdf = models.FileField(upload_to="invoice_pdf", null=True, blank=True)
    EWB_no = models.CharField(max_length=30, null=True, blank=True)
    user_entered_total_invoice_amount = models.FloatField(null=True, blank=True, default=0)
    ror_for_investor = models.FloatField(null=True, blank=True, default=0)
    maturity_after_investment = models.FloatField(null=True, blank=True, default=0)
    amount_due_investor = models.FloatField(null=True, blank=True, default=0)
    expected_gross_yield = models.FloatField(null=True, blank=True)
    expected_net_yield = models.FloatField(null=True, blank=True)
    status = models.CharField(max_length=20, null=True, blank=True)

    @property
    def tenure(self):
        today = date.today()
        tenure = self.invoice_due_date - today
        return tenure.days

class Entity(models.Model):
    entity_id = models.CharField(max_length=50, primary_key=True, default=uuid.uuid4)
    entity_name = models.CharField(max_length=20, null=True, blank=True)
    entity_address = models.CharField(max_length=30, null=True, blank=True)
    entity_contact_no = models.CharField(max_length=15, null=True, blank=True)
    entity_email_id = models.EmailField(max_length=25, null=True, blank=True)
    entity_contact_person_name_1 = models.CharField(max_length=25, null=True, blank=True)
    entity_contact_person_email_1 = models.EmailField(max_length=25, null=True, blank=True)
    entity_contact_person_number_1 = models.CharField(max_length=15, null=True, blank=True)
    entity_contact_person_mobile_1 = models.CharField(max_length=15, null=True, blank=True)
    entity_contact_person_designation_1 = models.CharField(max_length=15, null=True, blank=True)
    entity_contact_person_name_2 = models.CharField(max_length=25, null=True, blank=True)
    entity_contact_person_email_2 = models.EmailField(max_length=25, null=True, blank=True)
    entity_contact_person_number_2 = models.CharField(max_length=15, null=True, blank=True)
    entity_contact_person_mobile_2 = models.CharField(max_length=15, null=True, blank=True)
    entity_contact_person_designation_2 = models.CharField(max_length=15, null=True, blank=True)
    entity_contact_person_name_3 = models.CharField(max_length=25, null=True, blank=True)
    entity_contact_person_email_3 = models.EmailField(max_length=25, null=True, blank=True)
    entity_contact_person_number_3 = models.CharField(max_length=15, null=True, blank=True)
    entity_contact_person_mobile_3 = models.CharField(max_length=15, null=True, blank=True)
    entity_contact_person_designation_3 = models.CharField(max_length=15, null=True, blank=True)
    entity_sector = models.CharField(max_length=30, null=True, blank=True)
    about_client = models.TextField(max_length=200, null=True, blank=True)
    financial_detail = models.CharField(max_length=100, null=True, blank=True)
    credit_rating = models.CharField(max_length=30, null=True, blank=True)
    total_years = models.CharField(max_length=30, null=True, blank=True)
    total_invoices = models.IntegerField(null=True, blank=True)
    payment_on_time = models.IntegerField(null=True, blank=True)
    city = models.CharField(max_length=20, null=True, blank=True)
    mcred_opinion = models.TextField(null=True, blank=True)
    company_overview = models.TextField(null=True, blank=True)
    history_with_mcred = models.TextField(null=True, blank=True)
    company_logo = models.ImageField(upload_to=path_and_rename, null=True, blank=True)

class EntityBusinessROIMapping(models.Model):
    business_id = models.ForeignKey(Business, on_delete=models.CASCADE, null=True, blank=True)
    entity_id = models.ForeignKey(Entity, on_delete=models.CASCADE, null=True, blank=True)
    applicable_roi = models.FloatField(max_length=20, null=True, blank=True)
    benchmark_roi = models.FloatField(max_length=20, null=True, blank=True)
    special_roi = models.FloatField(max_length=20, null=True, blank=True)
    sector_base_rate = models.FloatField(max_length=20, null=True, blank=True)
    sector_risk_premium = models.FloatField(max_length=20, null=True, blank=True)
    business_risk_premium = models.FloatField(max_length=20, null=True, blank=True)
    entity_risk_premium = models.FloatField(max_length=20, null=True, blank=True)
    applicable_discount_rate = models.FloatField(max_length=20, null=True, blank=True)
    applicable_platform_fee = models.FloatField(max_length=20, null=True, blank=True)
    sub_limit = models.FloatField(max_length=20, null=True, blank=True)
    available_sub_limit = models.FloatField(max_length=20, null=True, blank=True)
    approved_credit_period = models.IntegerField(null=True, blank=True)
    margin_days = models.IntegerField(null=True, blank=True)
    lock_in_days = models.IntegerField(null=True, blank=True)

class EntityInvestorRORMapping(models.Model):
    investor_id = models.ForeignKey(Investor, on_delete=models.CASCADE, null=True, blank=True)
    entity_id = models.ForeignKey(Entity, on_delete=models.CASCADE, null=True, blank=True)
    applicable_ror = models.FloatField(max_length=20, null=True, blank=True)
    applicable_platform_fee = models.FloatField(max_length=20, null=True, blank=True)

class UserType(models.Model):
    user = models.CharField(max_length=100, null=True)
    department = models.CharField(max_length=100, null=True, blank=True)
    joined_on = models.DateField(default=datetime.today, blank=True)

class Transaction(models.Model):
    Transaction_Sub_Type = [('Withdrawal', 'Withdrawal'),
                            ('Funds added', 'Funds added'),
                            ('Refund', 'Refund'),
                            ('Deal Purchase', 'Deal Purchase'),
                            ('Repayment', 'Repayment'),
                            ]

    Transaction_Type = [('Credit', 'Credit'),
                        ('Debit', 'Debit'),
                        ]
    transaction_id = models.CharField(max_length=50, primary_key=True, default=uuid.uuid4)
    invoice_id = models.ForeignKey(Invoice, null=True, on_delete=models.CASCADE)
    invoice_pk = models.CharField(max_length=25, null=True, blank=True)
    invoice_upload_date = models.DateField(null=True, blank=True)
    batch_no = models.IntegerField(max_length=10, blank=True, null=True)
    transaction_date = models.DateField(null=True, blank=True)
    amount_invested = models.FloatField(null=True, blank=True)
    platform_service_fee_investor = models.FloatField(null=True, blank=True)
    gst_on_platform_service_fee_investor = models.FloatField(null=True, blank=True)
    amount_debited_from_investor_wallet = models.FloatField(null=True, blank=True)
    tenor = models.IntegerField(null=True, blank=True)
    due_date = models.DateField(null=True, blank=True)
    applicable_yield_investor = models.FloatField(null=True, blank=True)
    applicable_ROI = models.FloatField(null=True, blank=True)
    amount_settled_with_business = models.FloatField(null=True, blank=True)
    business_id = models.ForeignKey(Business, null=True, on_delete=models.CASCADE)
    investor_id = models.ForeignKey(Investor, null=True, on_delete=models.CASCADE)
    entity_id = models.ForeignKey(Entity, null=True, on_delete=models.CASCADE)
    entity_name = models.CharField(max_length=100, null=True, blank=True)
    investor_business_agreement = models.CharField(max_length=100, null=True, blank=True)
    platform_service_fee_business = models.FloatField(null=True, blank=True)
    gst_on_platform_service_fee_business = models.FloatField(null=True, blank=True)
    amount_to_be_credited_in_business_wallet = models.FloatField(null=True, blank=True)
    repayment_amount = models.FloatField(null=True, blank=True)
    settlement_amount_with_investor = models.FloatField(null=True, blank=True)
    settlement_amount_with_business = models.FloatField(null=True, blank=True)
    TDS_on_investor_fee = models.FloatField(null=True, blank=True)
    TDS_on_business_fee = models.FloatField(null=True, blank=True)
    calculated_yield = models.FloatField(null=True, blank=True)
    transaction_type = models.CharField(max_length=50, choices=Transaction_Type, default='Credit', blank=True)
    transaction_sub_type = models.CharField(max_length=50, choices=Transaction_Sub_Type, default='Withdrawal', blank=True)
    status = models.CharField(max_length=20, null=True, blank=True)
    maturity_amount = models.FloatField(null=True, blank=True)
    margin_retained = models.FloatField(null=True, blank=True)
    business_amount_before_margin_deduct = models.FloatField(null=True, blank=True)
    investor_earnings = models.FloatField(null=True, blank=True)

class Wallet(models.Model):
    business_id = models.CharField(max_length=100, null=True, blank=True)
    investor_id = models.CharField(max_length=100, null=True, blank=True)
    entity_id = models.CharField(max_length=100, null=True, blank=True)
    business_wallet_account = models.CharField(max_length=100, null=True, blank=True)
    investor_wallet_account = models.CharField(max_length=100, null=True, blank=True)
    amount_debit_from_investor_wallet = models.CharField(max_length=50, null=True, blank=True)
    amount_debit_from_business_wallet = models.CharField(max_length=50, null=True, blank=True)
    amount_credit_from_investor_wallet = models.CharField(max_length=50, null=True, blank=True)
    amount_credit_from_business_wallet = models.CharField(max_length=50, null=True, blank=True)
    amount_credit_to_mcred_wallet = models.CharField(max_length=50, null=True, blank=True)
    date_of_debit = models.DateField(default=datetime.today, null=True, blank=True)
    date_of_credit = models.DateField(default=datetime.today, null=True, blank=True)
    amount_credit_from_entity_bank_account = models.CharField(max_length=50, null=True, blank=True)
    investor_funds_wallet_to_bank_account = models.CharField(max_length=50, null=True, blank=True)
    investor_funds_bank_account_to_wallet = models.CharField(max_length=50, null=True, blank=True)
    business_funds_wallet_to_bank_account = models.CharField(max_length=50, null=True, blank=True)
    business_funds_bank_account_to_wallet = models.CharField(max_length=50, null=True, blank=True)
    purpose = models.CharField(max_length=50, null=True, blank=True)

class QuestionAnswer(models.Model):
    question = models.TextField(null=True, blank=True)
    answer = models.TextField(null=True, blank=True)
    user_type = models.TextField(null=True, blank=True)

class Escrow_acc(models.Model):
    type_of_transaction = models.CharField(max_length=100, null=True, blank=True)
    user_id = models.CharField(max_length=100, null=True, blank=True)
    user_type = models.CharField(max_length=100, null=True, blank=True)
    user_name = models.CharField(max_length=100, null=True, blank=True)
    date_of_transaction = models.DateTimeField(auto_now_add=True, null=True, blank=True)
    amount = models.FloatField(null=True, blank=True)
    status = models.CharField(max_length=50, null=True, blank=True)
    utr_number = models.IntegerField(null=True, blank=True)
    balance = models.FloatField(null=True, blank=True)
    transaction_id = models.CharField(max_length=100, null=True, blank=True)
    invoice_id = models.CharField(max_length=100, null=True, blank=True)
    account_number = models.IntegerField(null=True, blank=True)
    sub_type_of_transaction = models.CharField(max_length=100, null=True, blank=True)